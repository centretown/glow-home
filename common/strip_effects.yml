  - addressable_lambda: 
      name: "Hue Switch"
      update_interval: 100ms
      lambda: |-
        
        #include "glow/Gradients.h"

        static uint32_t count = millis();
        static glow::Gradients gradients;
        static bool reverse = false;

        if (initial_run) {
          gradients.Setup(&it, current_color, 1);
          gradients.Hue(192, 317);
          gradients.Saturation(255);
          gradients.Luminance(255);
        }

        gradients.Run();

        uint32_t mlls = millis();
        if (mlls >= count) {
          reverse = !reverse;
          count = mlls + 5000;
          if (reverse) {
            gradients.Hue(317, 192);
          }
          else {
            gradients.Hue(192, 317);
          }
        }
  - addressable_scan:
  - addressable_scan:
      name: Scan Effect With Custom Values
      move_interval: 100ms
      scan_width: 1

  - addressable_twinkle:
  - addressable_twinkle:
      name: Twinkle Effect With Custom Values
      twinkle_probability: 5%
      progress_interval: 4ms

  - addressable_random_twinkle:
  - addressable_random_twinkle:
      name: Random Twinkle Effect With Custom Values
      twinkle_probability: 5%
      progress_interval: 32ms


  - addressable_fireworks:
  - addressable_fireworks:
      name: Fireworks Effect With Custom Values
      update_interval: 32ms
      spark_probability: 10%
      use_random_color: false
      fade_out_rate: 120      

  - addressable_flicker:
  - addressable_flicker:
      name: Flicker Effect With Custom Values
      update_interval: 16ms
      intensity: 5%

  - addressable_rainbow:
  - addressable_rainbow:
      name: Rainbow Effect With Custom Values
      speed: 10
      width: 50
  