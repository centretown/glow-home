
      - addressable_lambda: 
          name: "Gradient Rows"
          update_interval: 16ms
          lambda: |-
            
            #include "glow/Gradients.h"
            static glow::Gradients gradients;
            static uint8_t hue = 0;

            if (initial_run) {
              gradients.setup(&it, 4); // 4 rows
              // change something every 48ms
              gradients.set_interval(48);
              // set base color to red
              gradients.set_base_color(ESPHSVColor(hue, 255, 255));
            }

            if (gradients.check_interval(millis())) {
              // move around the color wheel, saturation and value 100%
              gradients.set_base_color(ESPHSVColor(++hue, 255, 255));
            }

            gradients.rows_to(Color::WHITE);

      - addressable_lambda: 
          name: "Gradient Rows Paralell"
          update_interval: 16ms
          lambda: |-
            
            #include "glow/Gradients.h"
            static glow::Gradients gradients;
            static uint8_t hue = 0;

            if (initial_run) {
              gradients.setup(&it, 4); // 4 rows
              // change something every 48ms
              gradients.set_interval(48);
              // set base color to red
              gradients.set_base_color(ESPHSVColor(hue, 255, 255));
            }

            if (gradients.check_interval(millis())) {
              // move around the color wheel, saturation and value 100%
              gradients.set_base_color(ESPHSVColor(++hue, 255, 255));
            }

            gradients.rows_paralell_to(Color::WHITE);

      - addressable_lambda: 
          name: "Gradient Columns"
          update_interval: 16ms
          lambda: |-
            
            #include "glow/Gradients.h"
            static glow::Gradients gradients;
            static uint8_t hue = 0;

            if (initial_run) {
              gradients.setup(&it, 4); // 4 rows
              // change something every 48ms
              gradients.set_interval(48);
              // set base color to red
              gradients.set_base_color(ESPHSVColor(hue, 255, 255));
            }

            if (gradients.check_interval(millis())) {
              // move around the color wheel, saturation and value 100%
              gradients.set_base_color(ESPHSVColor(++hue, 255, 255));
            }

            gradients.columns_to(Color::WHITE);

      - addressable_lambda: 
          name: "Gradient Columns Paralell"
          update_interval: 16ms
          lambda: |-
            
            #include "glow/Gradients.h"
            static glow::Gradients gradients;
            static uint8_t hue = 0;

            if (initial_run) {
              gradients.setup(&it, 4); // 4 rows
              // change something every 48ms
              gradients.set_interval(48);
              // set base color to red
              gradients.set_base_color(ESPHSVColor(hue, 255, 255));
            }

            if (gradients.check_interval(millis())) {
              // move around the color wheel, saturation and value 100%
              gradients.set_base_color(ESPHSVColor(++hue, 255, 255));
            }

            gradients.columns_paralell_to(Color::WHITE);
