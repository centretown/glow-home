- addressable_lambda: 
    name: "black-white-scan"
    update_interval: 48ms
    lambda: |-
      #include "glow/catalog.h"
      static glow::Frame frame(glow::from_catalog(glow::BLACK_WHITE_SCAN));
      if (initial_run) {
        frame.setup(it.size(), 4, 48);
      }
      if (frame.is_ready()) {
        frame.spin(it);
      }
- addressable_lambda: 
    name: "complementary-scan"
    update_interval: 48ms
    lambda: |-
      #include "glow/catalog.h"
      static glow::Frame frame(glow::from_catalog(glow::COMPLEMENTARY_SCAN));
      if (initial_run) {
        frame.setup(it.size(), 4, 48);
      }
      if (frame.is_ready()) {
        frame.spin(it);
      }
- addressable_lambda: 
    name: "double-scan"
    update_interval: 48ms
    lambda: |-
      #include "glow/catalog.h"
      static glow::Frame frame(glow::from_catalog(glow::DOUBLE_SCAN));
      if (initial_run) {
        frame.setup(it.size(), 4, 48);
      }
      if (frame.is_ready()) {
        frame.spin(it);
      }
- addressable_lambda: 
    name: "gradient-scan"
    update_interval: 48ms
    lambda: |-
      #include "glow/catalog.h"
      static glow::Frame frame(glow::from_catalog(glow::GRADIENT_SCAN));
      if (initial_run) {
        frame.setup(it.size(), 4, 48);
      }
      if (frame.is_ready()) {
        frame.spin(it);
      }
- addressable_lambda: 
    name: "rainbow-diagonal"
    update_interval: 48ms
    lambda: |-
      #include "glow/catalog.h"
      static glow::Frame frame(glow::from_catalog(glow::RAINBOW_DIAGONAL));
      if (initial_run) {
        frame.setup(it.size(), 4, 48);
      }
      if (frame.is_ready()) {
        frame.spin(it);
      }
- addressable_lambda: 
    name: "rainbow-horizontal"
    update_interval: 48ms
    lambda: |-
      #include "glow/catalog.h"
      static glow::Frame frame(glow::from_catalog(glow::RAINBOW_HORIZONTAL));
      if (initial_run) {
        frame.setup(it.size(), 4, 48);
      }
      if (frame.is_ready()) {
        frame.spin(it);
      }
- addressable_lambda: 
    name: "rainbow-vertical"
    update_interval: 48ms
    lambda: |-
      #include "glow/catalog.h"
      static glow::Frame frame(glow::from_catalog(glow::RAINBOW_VERTICAL));
      if (initial_run) {
        frame.setup(it.size(), 4, 48);
      }
      if (frame.is_ready()) {
        frame.spin(it);
      }
- addressable_lambda: 
    name: "split_in_three"
    update_interval: 48ms
    lambda: |-
      #include "glow/catalog.h"
      static glow::Frame frame(glow::from_catalog(glow::SPLIT_IN_THREE));
      if (initial_run) {
        frame.setup(it.size(), 4, 48);
      }
      if (frame.is_ready()) {
        frame.spin(it);
      }
- addressable_lambda: 
    name: "split_in_two"
    update_interval: 48ms
    lambda: |-
      #include "glow/catalog.h"
      static glow::Frame frame(glow::from_catalog(glow::SPLIT_IN_TWO));
      if (initial_run) {
        frame.setup(it.size(), 4, 48);
      }
      if (frame.is_ready()) {
        frame.spin(it);
      }
- addressable_lambda: 
    name: "spotlight"
    update_interval: 48ms
    lambda: |-
      #include "glow/catalog.h"
      static glow::Frame frame(glow::from_catalog(glow::SPOTLIGHT));
      if (initial_run) {
        frame.setup(it.size(), 4, 48);
      }
      if (frame.is_ready()) {
        frame.spin(it);
      }
